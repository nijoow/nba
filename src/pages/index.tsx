import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import useGetPlayer from "@/hooks/useGetPlayer";
import useGetAllGames from "@/hooks/useGetAllGames";
import { dateToISO } from "@/utils/getDate";
import { FaFolder, FaCaretLeft, FaCaretRight } from "react-icons/fa";
import { AiOutlineLoading3Quarters } from "react-icons/ai";
import { useEffect, useState } from "react";
import ScoreApp from "@/components/ScoreApp";
import Draggable from "react-draggable";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const { playerList } = useGetPlayer();

  const [openScore, setOpenScore] = useState(false);

  const [position, setPosition] = useState({ x: 0, y: 0 });
  const trackPos = (data: { x: number; y: number }) => {
    console.log(data);
    setPosition((state) => ({ x: data.x, y: data.y }));
    if (data.x < 0) setPosition((state) => ({ x: 100, y: data.y }));
  };
  const [opacity, setOpacity] = useState(false);

  const handleStart = () => {
    setOpacity(true);
  };
  const handleEnd = () => {
    setOpacity(false);
  };
  const [clock, setClock] = useState<{
    dayOfWeek: string | null;
    month: string | null;
    day: string | null;

    year: string | null;
    hours: string | null;
    minutes: string | null;
    ampm: "PM" | "AM" | null;
  }>({
    dayOfWeek: null,
    month: null,
    day: null,
    year: null,
    hours: null,
    minutes: null,
    ampm: null,
  });
  const getClock = () => {
    const today = new Date();
    const [dayOfWeek, month, day, year] = today
      .toString()
      .split(" ")
      .map((item) => item.toUpperCase());
    const hours = today.getHours() % 12 ? String(today.getHours() % 12) : "12";
    const minutes = String(today.getMinutes()).padStart(2, "0");
    const ampm = today.getHours() >= 12 ? "PM" : "AM";

    setClock({ dayOfWeek, month, day, year, hours, minutes, ampm });
  };

  useEffect(() => {
    const getClockInterval = setInterval(getClock, 1000);
    return () => clearInterval(getClockInterval);
  }, []);

  return (
    <>
      <Head>
        <title>NBA Web</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full h-screen overflow-hidden bg-[center_bottom] bg-cover bg-image">
        <div className="absolute top-0 flex gap-4 p-6 text-2xl font-bold text-white right-2">
          <span>
            {clock.dayOfWeek} {clock.month} {clock.day}
          </span>
          <span>
            {clock.hours}:{clock.minutes} {clock.ampm}
          </span>
        </div>
        <Draggable
          defaultPosition={{ x: 20, y: 20 }}
          onDrag={(e, data) => trackPos(data)}
          onStart={handleStart}
          onStop={handleEnd}
        >
          <div className="absolute flex flex-col items-center cursor-pointer w-fit">
            <FaFolder
              size={84}
              className="text-sky-300"
              opacity={opacity ? 0.6 : 1}
              onDoubleClick={() => setOpenScore(true)}
            />
            <span className="text-sm text-white -translate-y-1">
              Score Board
            </span>
          </div>
        </Draggable>
        {openScore && <ScoreApp setOpenScore={setOpenScore} />}
      </div>
    </>
  );
}
